import telebot
from telebot import types
import sqlite3

bot = telebot.TeleBot('6346836501:AAHEvgFS3JTkp-CB5_FTJDVvm98EX8rtirI')

# –ú–µ–Ω—é:
def main_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('ü©π –ó–¥–æ—Ä–æ–≤—å–µ')
    btn2 = types.KeyboardButton('üíº –†–∞–±–æ—Ç–∞ / –±–∏–∑–Ω–µ—Å')
    btn3 = types.KeyboardButton('üë®‚Äçüë©‚Äçüëß –°–µ–º—å—è / –≤–∑–∞–∏–º–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è')
    btn4 = types.KeyboardButton('üß† –°–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–µ')
    markup.row(btn1, btn2)
    markup.row(btn3, btn4)
    return markup

# –°—Ñ–µ—Ä—ã:
def menu_1_health():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('üçè –ñ–∞–ª–æ–±–∞ / –ó–∞–ø—Ä–æ—Å ‚Ññ1')
    btn2 = types.KeyboardButton('üçä –ñ–∞–ª–æ–±–∞ / –ó–∞–ø—Ä–æ—Å ‚Ññ2')
    back = types.KeyboardButton('‚¨Ö –ú–µ–Ω—é')
    markup.add(btn1, btn2, back)
    return markup

def menu_1_job():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('üçì –ñ–∞–ª–æ–±–∞ / –ó–∞–ø—Ä–æ—Å ‚Ññ3')
    btn2 = types.KeyboardButton('üçá –ñ–∞–ª–æ–±–∞ / –ó–∞–ø—Ä–æ—Å ‚Ññ4')
    back = types.KeyboardButton('‚¨Ö –ú–µ–Ω—é')
    markup.add(btn1, btn2, back)
    return markup

def menu_1_family():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('üçè –ñ–∞–ª–æ–±–∞ / –ó–∞–ø—Ä–æ—Å ‚Ññ1')
    btn2 = types.KeyboardButton('üçä –ñ–∞–ª–æ–±–∞ / –ó–∞–ø—Ä–æ—Å ‚Ññ2')
    back = types.KeyboardButton('‚¨Ö –ú–µ–Ω—é')
    markup.add(btn1, btn2, back)
    return markup

def menu_1_selfdev():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('üçì –ñ–∞–ª–æ–±–∞ / –ó–∞–ø—Ä–æ—Å ‚Ññ3')
    btn2 = types.KeyboardButton('üçá –ñ–∞–ª–æ–±–∞ / –ó–∞–ø—Ä–æ—Å ‚Ññ4')
    back = types.KeyboardButton('‚¨Ö –ú–µ–Ω—é')
    markup.add(btn1, btn2, back)
    return markup

# –ñ–∞–ª–æ–±—ã:

def menu_2_1():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('–ü—Ä–æ—Ü–µ–¥—É—Ä–∞ ‚Ññ1')
    btn2 = types.KeyboardButton('–ü—Ä–æ—Ü–µ–¥—É—Ä–∞ ‚Ññ2')
    back = types.KeyboardButton('‚¨Ö –ú–µ–Ω—é')
    markup.add(btn1, btn2, back)
    return markup

def menu_2_2():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('–ü—Ä–æ—Ü–µ–¥—É—Ä–∞ ‚Ññ3')
    btn2 = types.KeyboardButton('–ü—Ä–æ—Ü–µ–¥—É—Ä–∞ ‚Ññ4')
    back = types.KeyboardButton('‚¨Ö –ú–µ–Ω—é')
    markup.add(btn1, btn2, back)
    return markup

def menu_2_3():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('–ü—Ä–æ—Ü–µ–¥—É—Ä–∞ ‚Ññ5')
    btn2 = types.KeyboardButton('–ü—Ä–æ—Ü–µ–¥—É—Ä–∞ ‚Ññ6')
    back = types.KeyboardButton('‚¨Ö –ú–µ–Ω—é')
    markup.add(btn1, btn2, back)
    return markup

# –ü—Ä–æ—Ü–µ–¥—É—Ä—ã:

def menu_3(session_id):
    sessions = print_sessions()
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–∏–µ–º')
    back = types.KeyboardButton('‚¨Ö –ú–µ–Ω—é')
    markup.add(btn1, back)
    text = sessions[session_id]
    return markup, text

def print_sessions():
    sessions = []
    conn = sqlite3.connect('data_base/aurora_tg_bot.db')
    cur = conn.cursor()

    cur.execute('select * from sessions')
    s = cur.fetchall()
    for el in s:
        sessions.append(f'–°–µ–∞–Ω—Å: {el[1]}\n–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç: {el[2]}\n–û–ø–∏—Å–∞–Ω–∏–µ: {el[3]}\n')

    cur.close()
    conn.close()
    return sessions

def load_sessions_array(session):
    sessions = []
    conn = sqlite3.connect('data_base/aurora_tg_bot.db')
    cur = conn.cursor()

    cur.execute('select * from sessions')
    s = cur.fetchall()
    for el in s:
        sessions.append(el)

    cur.close()
    conn.close()
    return sessions

@bot.message_handler(commands=['allsessions'])
def print(message):
    sessions = print_sessions()
    bot.send_message(message.chat.id, '–°–µ–∞–Ω—Å—ã:\n')
    for el in sessions:
        bot.send_message(message.chat.id, el)

@bot.message_handler(commands=['start'])
def main(message):
    conn = sqlite3.connect('data_base/aurora_tg_bot.db')
    cur = conn.cursor()

    cur.execute('create table if not exists sessions(id int auto_increment primary key, title varchar(50), expert varchar(50), description varchar(300))')
    conn.commit()
    cur.close()
    conn.close()

    bot.send_message(message.chat.id, f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {message.from_user.first_name}, –≤—ã–±–µ—Ä–∏—Ç–µ —Å—Ñ–µ—Ä—É —É—Å–ª—É–≥:', reply_markup=main_menu())


@bot.message_handler(content_types=['text'])
def bot_message(message):

    # –ù–∞–∑–∞–¥—ã
    if message.text == '‚¨Ö –ú–µ–Ω—é':
        bot.send_message(message.chat.id, f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {message.from_user.first_name}, –≤—ã–±–µ—Ä–∏—Ç–µ —Å—Ñ–µ—Ä—É —É—Å–ª—É–≥:', reply_markup=main_menu())

    # –ú–µ–Ω—é :ll
    elif message.text == 'ü©π –ó–¥–æ—Ä–æ–≤—å–µ':
        bot.send_message(message.chat.id, 'ü©π –ó–¥–æ—Ä–æ–≤—å–µ:', reply_markup=menu_1_health())

    elif message.text == 'üíº –†–∞–±–æ—Ç–∞ / –±–∏–∑–Ω–µ—Å':
        bot.send_message(message.chat.id, 'üíº –†–∞–±–æ—Ç–∞ / –±–∏–∑–Ω–µ—Å:', reply_markup=menu_1_job())

    elif message.text == 'üë®‚Äçüë©‚Äçüëß –°–µ–º—å—è / –≤–∑–∞–∏–º–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è':
        bot.send_message(message.chat.id, 'üë®‚Äçüë©‚Äçüëß –°–µ–º—å—è / –≤–∑–∞–∏–º–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è:', reply_markup=menu_1_family())

    elif message.text == 'üß† –°–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–µ':
        bot.send_message(message.chat.id, 'üß† –°–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–µ:', reply_markup=menu_1_selfdev())

    # –ñ–∞–ª–æ–±—ã :
    elif message.text == 'üçè –ñ–∞–ª–æ–±–∞ / –ó–∞–ø—Ä–æ—Å ‚Ññ1':
        bot.send_message(message.chat.id, 'üçè –ñ–∞–ª–æ–±–∞ / –ó–∞–ø—Ä–æ—Å ‚Ññ1:', reply_markup=menu_2_1())

    elif message.text == 'üçä –ñ–∞–ª–æ–±–∞ / –ó–∞–ø—Ä–æ—Å ‚Ññ2':
        bot.send_message(message.chat.id, 'üçä –ñ–∞–ª–æ–±–∞ / –ó–∞–ø—Ä–æ—Å ‚Ññ2:', reply_markup=menu_2_2())

    elif message.text == 'üçì –ñ–∞–ª–æ–±–∞ / –ó–∞–ø—Ä–æ—Å ‚Ññ3':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        bot.send_message(message.chat.id, 'üçì –ñ–∞–ª–æ–±–∞ / –ó–∞–ø—Ä–æ—Å ‚Ññ3:', reply_markup=menu_2_3())

    elif message.text == 'üçá –ñ–∞–ª–æ–±–∞ / –ó–∞–ø—Ä–æ—Å ‚Ññ4':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        bot.send_message(message.chat.id, 'üçá –ñ–∞–ª–æ–±–∞ / –ó–∞–ø—Ä–æ—Å ‚Ññ4:', reply_markup=menu_2_1())


    # –ü–†–û–¶–ï–î–£–†–´ :
    elif message.text == '–ü—Ä–æ—Ü–µ–¥—É—Ä–∞ ‚Ññ1':
        markup, text = menu_3(0)
        bot.send_message(message.chat.id, text, reply_markup=markup, parse_mode="Markdown")

    elif message.text == '–ü—Ä–æ—Ü–µ–¥—É—Ä–∞ ‚Ññ2':
        markup, text = menu_3(1)
        bot.send_message(message.chat.id, text, reply_markup=markup, parse_mode="Markdown")

    elif message.text == '–ü—Ä–æ—Ü–µ–¥—É—Ä–∞ ‚Ññ3':
        markup, text = menu_3(2)
        bot.send_message(message.chat.id, text, reply_markup=markup, parse_mode="Markdown")



bot.polling(none_stop = True)